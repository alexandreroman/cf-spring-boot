spring:
  application:
    name: cf-spring-boot

management:
  endpoints:
    web:
      exposure:
        include: "*"

  # Enable liveness and readiness probes
  # (not enabled by default when running on Cloud Foundry).
  endpoint:
    health:
      probes:
        enabled: true

---

# This section is only active when running on Cloud Foundry.

spring:
  config:
    activate:
      on-cloud-platform: cloud_foundry

  web:
    # Enable caching for static resources.
    resources:
      cache:
        period: 3600
      chain:
        strategy:
          content:
            enabled: true
            paths:
            - /css/**
            - /images/**

# Make app metrics available under /actuator/prometheus.
# Set up Cloud Foundry to pull metrics out of your app:
# $ cf register-metrics-endpoint cf-spring-boot /actuator/prometheus --insecure
management:
  # Set up actuator endpoints.
  endpoints:
    web:
      exposure:
        include: health, info, prometheus
  info:
    java:
      enabled: true
    os:
      enabled: true
    process:
      enabled: true

  # Set common metrics tags.
  observations:
    key-values: &tags
      application: ${spring.application.name}
      service: ${spring.application.name}
      source: ${spring.application.name}-${random.uuid}
  metrics:
    tags: *tags

# Use JSON based format for structured logging when running on Cloud Foundry.
# You may want to forward log entries to some ElasticSearch / Kibana instance for example.
logging:
  structured:
    format:
      console: ecs
